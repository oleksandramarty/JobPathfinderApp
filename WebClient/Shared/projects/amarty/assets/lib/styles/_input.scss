@use '_variables.scss' as v;
@use '_mixins.scss' as m;

.input.input-icon {
  padding: #{m.pxToRem(8)} #{m.pxToRem(36)} #{m.pxToRem(8)} #{m.pxToRem(12)};
}

.input,
.textarea,
.select {
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  font-family: var(--font-stack), serif;
  padding: #{m.pxToRem(8)} #{m.pxToRem(12)};
  font-size: #{m.pxToRem(14)};
  border-radius: var(--radius-medium);
  cursor: pointer;
  border: #{m.pxToRem(1.5)} solid var(--btn-primary);
  background-color: var(--background-light) !important;
  color: var(--text);
  min-width: #{m.pxToRem(170)};

  &:focus {
    outline: none;
  }
}

.input {
  height: #{m.pxToRem(40)} !important;
}

.textarea {
  resize: vertical;
}

.select {
  appearance: none;
  height: #{m.pxToRem(40)};
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='18' height='18' fill='%23666'%3E%3Cpath d='M7 10l5 5 5-5H7z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right #{m.pxToRem(8)} center;
  background-size: #{m.pxToRem(16)};
  padding-right: #{m.pxToRem(32)};
}

.checkbox,
.radio {
  display: flex;
  align-items: center;
  gap: #{m.pxToRem(4)};
  cursor: pointer;
  font-size: #{m.pxToRem(14)};

  input {
    appearance: none;
    margin: #{m.pxToRem(2)} #{m.pxToRem(2)} #{m.pxToRem(4)} #{m.pxToRem(2)};
    width: #{m.pxToRem(18)};
    height: #{m.pxToRem(18)};
    border: #{m.pxToRem(1.5)} solid var(--btn-primary);
    border-radius: var(--radius-small);
    background-color: var(--primary-white);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: border-color var(--transition-fast);
  }
}

.checkbox {
  input {
    position: relative;
    background-color: var(--background-light);

    &:checked {
      border-color: var(--accent);
    }

    &:checked::after {
      content: "";
      position: absolute;
      width: #{m.pxToRem(5)};
      height: #{m.pxToRem(9)};
      border: solid var(--accent);
      border-width: 0 0.125rem 0.125rem 0;
      left: #{m.pxToRem(4)};
      top: 0;
      transform: rotate(45deg);
    }
  }
}

.radio input {
  border-radius: 50%;

  &:checked {
    border-color: var(--accent);
    background-color: transparent;
  }

  &:checked::before {
    content: "";
    width: #{m.pxToRem(10)};
    height: #{m.pxToRem(10)};
    background-color: var(--accent);
    border-radius: 50%;
  }
}

.invalid {
  border: #{m.pxToRem(1.5)} solid var(--error);
}

.datepicker {
  position: relative;
  display: inline-block;
  width: 100%;

  .date-input {
    font-family: var(--font-stack), serif;
    padding: #{m.pxToRem(8)} #{m.pxToRem(12)};
    font-size: #{m.pxToRem(14)};
    border-radius: var(--radius-medium);
    cursor: pointer;
    border: #{m.pxToRem(1.5)} solid var(--btn-primary);
    background-color: var(--primary-white);
    color: var(--text);
    min-width: #{m.pxToRem(170)};
    height: #{m.pxToRem(16)};

    &::-webkit-calendar-picker-indicator {
      filter: invert(30%) sepia(10%) saturate(500%) hue-rotate(180deg);
      cursor: pointer;
    }

    &:focus {
      outline: none;
    }
  }
}

span.asterisk {
  font-weight: 600;
  font-family: system-ui;
  color: var(--accent);
  margin: 0 1px;
}

mat-datepicker-toggle {
  position: absolute;
  top: 0;
  right: #{m.pxToRem(2)};
}

:host ::ng-deep .mat-form-field {
  display: none;
}

:host ::ng-deep .mat-datepicker-toggle,
:host ::ng-deep .mat-date-range-input {
  display: none;
}

:host ::ng-deep .hidden-datepicker-toggle {
  display: none !important;
}
