//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';
import { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';

export const API_BASE_URL_CommonModule = new InjectionToken<string>('API_BASE_URL_CommonModule');


export class ErrorMessageModel implements IErrorMessageModel {
    invalidFields?: InvalidFieldInfoModel[] | undefined;
    message?: string;
    statusCode?: number;

    constructor(data?: IErrorMessageModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["invalidFields"])) {
                this.invalidFields = [] as any;
                for (let item of _data["invalidFields"])
                    this.invalidFields!.push(InvalidFieldInfoModel.fromJS(item));
            }
            this.message = _data["message"];
            this.statusCode = _data["statusCode"];
        }
    }

    static fromJS(data: any): ErrorMessageModel {
        data = typeof data === 'object' ? data : {};
        let result = new ErrorMessageModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.invalidFields)) {
            data["invalidFields"] = [];
            for (let item of this.invalidFields)
                data["invalidFields"].push(item.toJSON());
        }
        data["message"] = this.message;
        data["statusCode"] = this.statusCode;
        return data;
    }
}

export interface IErrorMessageModel {
    invalidFields?: InvalidFieldInfoModel[] | undefined;
    message?: string;
    statusCode?: number;
}

export class InvalidFieldInfoModel implements IInvalidFieldInfoModel {
    propertyName?: string;
    code?: string;
    errorMessage?: string;

    constructor(data?: IInvalidFieldInfoModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.propertyName = _data["propertyName"];
            this.code = _data["code"];
            this.errorMessage = _data["errorMessage"];
        }
    }

    static fromJS(data: any): InvalidFieldInfoModel {
        data = typeof data === 'object' ? data : {};
        let result = new InvalidFieldInfoModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["propertyName"] = this.propertyName;
        data["code"] = this.code;
        data["errorMessage"] = this.errorMessage;
        return data;
    }
}

export interface IInvalidFieldInfoModel {
    propertyName?: string;
    code?: string;
    errorMessage?: string;
}

export class AuthSignInRequest implements IAuthSignInRequest {
    login!: string;
    password!: string;
    rememberMe?: boolean;

    constructor(data?: IAuthSignInRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.login = _data["login"];
            this.password = _data["password"];
            this.rememberMe = _data["rememberMe"];
        }
    }

    static fromJS(data: any): AuthSignInRequest {
        data = typeof data === 'object' ? data : {};
        let result = new AuthSignInRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["login"] = this.login;
        data["password"] = this.password;
        data["rememberMe"] = this.rememberMe;
        return data;
    }
}

export interface IAuthSignInRequest {
    login: string;
    password: string;
    rememberMe?: boolean;
}

export class AuthSignOutRequest implements IAuthSignOutRequest {

    constructor(data?: IAuthSignOutRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
    }

    static fromJS(data: any): AuthSignOutRequest {
        data = typeof data === 'object' ? data : {};
        let result = new AuthSignOutRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        return data;
    }
}

export interface IAuthSignOutRequest {
}

export class CurrentUserRequest implements ICurrentUserRequest {

    constructor(data?: ICurrentUserRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
    }

    static fromJS(data: any): CurrentUserRequest {
        data = typeof data === 'object' ? data : {};
        let result = new CurrentUserRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        return data;
    }
}

export interface ICurrentUserRequest {
}

export class AuthForgotRequest implements IAuthForgotRequest {

    constructor(data?: IAuthForgotRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
    }

    static fromJS(data: any): AuthForgotRequest {
        data = typeof data === 'object' ? data : {};
        let result = new AuthForgotRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        return data;
    }
}

export interface IAuthForgotRequest {
}

export class BaseVersionEntity implements IBaseVersionEntity {
    version!: string;

    constructor(data?: IBaseVersionEntity) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.version = _data["version"];
        }
    }

    static fromJS(data: any): BaseVersionEntity {
        data = typeof data === 'object' ? data : {};
        let result = new BaseVersionEntity();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["version"] = this.version;
        return data;
    }
}

export interface IBaseVersionEntity {
    version: string;
}

export class LocalesRequest extends BaseVersionEntity implements ILocalesRequest {

    constructor(data?: ILocalesRequest) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
    }

    static override fromJS(data: any): LocalesRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LocalesRequest();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data;
    }
}

export interface ILocalesRequest extends IBaseVersionEntity {
}

export class LocalizationsRequest extends BaseVersionEntity implements ILocalizationsRequest {
    isPublic?: boolean;

    constructor(data?: ILocalizationsRequest) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.isPublic = _data["isPublic"];
        }
    }

    static override fromJS(data: any): LocalizationsRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LocalizationsRequest();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isPublic"] = this.isPublic;
        super.toJSON(data);
        return data;
    }
}

export interface ILocalizationsRequest extends IBaseVersionEntity {
    isPublic?: boolean;
}

export class CountriesRequest extends BaseVersionEntity implements ICountriesRequest {

    constructor(data?: ICountriesRequest) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
    }

    static override fromJS(data: any): CountriesRequest {
        data = typeof data === 'object' ? data : {};
        let result = new CountriesRequest();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data;
    }
}

export interface ICountriesRequest extends IBaseVersionEntity {
}

export class SkillsRequest extends BaseVersionEntity implements ISkillsRequest {

    constructor(data?: ISkillsRequest) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
    }

    static override fromJS(data: any): SkillsRequest {
        data = typeof data === 'object' ? data : {};
        let result = new SkillsRequest();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data;
    }
}

export interface ISkillsRequest extends IBaseVersionEntity {
}

export class SiteSettingsRequest implements ISiteSettingsRequest {

    constructor(data?: ISiteSettingsRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
    }

    static fromJS(data: any): SiteSettingsRequest {
        data = typeof data === 'object' ? data : {};
        let result = new SiteSettingsRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        return data;
    }
}

export interface ISiteSettingsRequest {
}

export class BaseFilterRequest implements IBaseFilterRequest {
    paginator?: PaginatorEntity | undefined;
    sort?: BaseSortableRequest | undefined;
    dateRange?: BaseDateRangeFilterRequest | undefined;
    amountRange?: BaseAmountRangeFilterRequest | undefined;
    query?: string | undefined;

    constructor(data?: IBaseFilterRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.paginator = _data["paginator"] ? PaginatorEntity.fromJS(_data["paginator"]) : <any>undefined;
            this.sort = _data["sort"] ? BaseSortableRequest.fromJS(_data["sort"]) : <any>undefined;
            this.dateRange = _data["dateRange"] ? BaseDateRangeFilterRequest.fromJS(_data["dateRange"]) : <any>undefined;
            this.amountRange = _data["amountRange"] ? BaseAmountRangeFilterRequest.fromJS(_data["amountRange"]) : <any>undefined;
            this.query = _data["query"];
        }
    }

    static fromJS(data: any): BaseFilterRequest {
        data = typeof data === 'object' ? data : {};
        let result = new BaseFilterRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["paginator"] = this.paginator ? this.paginator.toJSON() : <any>undefined;
        data["sort"] = this.sort ? this.sort.toJSON() : <any>undefined;
        data["dateRange"] = this.dateRange ? this.dateRange.toJSON() : <any>undefined;
        data["amountRange"] = this.amountRange ? this.amountRange.toJSON() : <any>undefined;
        data["query"] = this.query;
        return data;
    }
}

export interface IBaseFilterRequest {
    paginator?: PaginatorEntity | undefined;
    sort?: BaseSortableRequest | undefined;
    dateRange?: BaseDateRangeFilterRequest | undefined;
    amountRange?: BaseAmountRangeFilterRequest | undefined;
    query?: string | undefined;
}

export class MediatrBaseFilteredRequestOfAuditTrailResponse extends BaseFilterRequest implements IMediatrBaseFilteredRequestOfAuditTrailResponse {

    constructor(data?: IMediatrBaseFilteredRequestOfAuditTrailResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
    }

    static override fromJS(data: any): MediatrBaseFilteredRequestOfAuditTrailResponse {
        data = typeof data === 'object' ? data : {};
        let result = new MediatrBaseFilteredRequestOfAuditTrailResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data;
    }
}

export interface IMediatrBaseFilteredRequestOfAuditTrailResponse extends IBaseFilterRequest {
}

export class FilteredAuditTrailRequest extends MediatrBaseFilteredRequestOfAuditTrailResponse implements IFilteredAuditTrailRequest {
    entityType?: AuditTrailEntityEnum | undefined;
    action?: AuditTrailActionEnum | undefined;
    type?: AuditTrailEnum | undefined;
    exceptionType?: ExceptionEnum | undefined;
    entityId?: string | undefined;
    userId?: string | undefined;
    translationKey?: string | undefined;

    constructor(data?: IFilteredAuditTrailRequest) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.entityType = _data["entityType"];
            this.action = _data["action"];
            this.type = _data["type"];
            this.exceptionType = _data["exceptionType"];
            this.entityId = _data["entityId"];
            this.userId = _data["userId"];
            this.translationKey = _data["translationKey"];
        }
    }

    static override fromJS(data: any): FilteredAuditTrailRequest {
        data = typeof data === 'object' ? data : {};
        let result = new FilteredAuditTrailRequest();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["entityType"] = this.entityType;
        data["action"] = this.action;
        data["type"] = this.type;
        data["exceptionType"] = this.exceptionType;
        data["entityId"] = this.entityId;
        data["userId"] = this.userId;
        data["translationKey"] = this.translationKey;
        super.toJSON(data);
        return data;
    }
}

export interface IFilteredAuditTrailRequest extends IMediatrBaseFilteredRequestOfAuditTrailResponse {
    entityType?: AuditTrailEntityEnum | undefined;
    action?: AuditTrailActionEnum | undefined;
    type?: AuditTrailEnum | undefined;
    exceptionType?: ExceptionEnum | undefined;
    entityId?: string | undefined;
    userId?: string | undefined;
    translationKey?: string | undefined;
}

export enum AuditTrailEntityEnum {
    User = 1,
    UserProject = 2,
    UserAllowedProject = 3,
    Expense = 4,
}

export enum AuditTrailActionEnum {
    ExceptionHandlingMiddleware = 1,
}

export enum AuditTrailEnum {
    Info = 1,
    Warning = 2,
    Error = 3,
    Create = 4,
    Update = 5,
    Delete = 6,
    Job = 7,
    JobManually = 8,
}

export enum ExceptionEnum {
    AuthException = 1,
    LockException = 2,
    JobException = 3,
    BusinessException = 4,
    EntityNotFoundException = 5,
    ForbiddenException = 6,
    VersionException = 7,
    BaseException = 8,
    Exception = 9,
}

export class PaginatorEntity implements IPaginatorEntity {
    pageNumber?: number;
    pageSize?: number;
    isFull?: boolean;

    constructor(data?: IPaginatorEntity) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageNumber = _data["pageNumber"];
            this.pageSize = _data["pageSize"];
            this.isFull = _data["isFull"];
        }
    }

    static fromJS(data: any): PaginatorEntity {
        data = typeof data === 'object' ? data : {};
        let result = new PaginatorEntity();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageNumber"] = this.pageNumber;
        data["pageSize"] = this.pageSize;
        data["isFull"] = this.isFull;
        return data;
    }
}

export interface IPaginatorEntity {
    pageNumber?: number;
    pageSize?: number;
    isFull?: boolean;
}

export class BaseSortableRequest implements IBaseSortableRequest {
    column?: ColumnEnum | undefined;
    direction?: OrderDirectionEnum | undefined;

    constructor(data?: IBaseSortableRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.column = _data["column"];
            this.direction = _data["direction"];
        }
    }

    static fromJS(data: any): BaseSortableRequest {
        data = typeof data === 'object' ? data : {};
        let result = new BaseSortableRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["column"] = this.column;
        data["direction"] = this.direction;
        return data;
    }
}

export interface IBaseSortableRequest {
    column?: ColumnEnum | undefined;
    direction?: OrderDirectionEnum | undefined;
}

export enum ColumnEnum {
    Date = 1,
    CreatedAt = 2,
    UpdatedAt = 3,
    Title = 4,
    Description = 5,
    Amount = 6,
    NextDate = 7,
    CurrentAmount = 8,
    EndDate = 9,
    StartDate = 10,
}

export enum OrderDirectionEnum {
    Desc = 1,
    Asc = 2,
}

export class BaseDateRangeFilterRequest implements IBaseDateRangeFilterRequest {
    startDate?: Date | undefined;
    endDate?: Date | undefined;

    constructor(data?: IBaseDateRangeFilterRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.startDate = _data["startDate"] ? new Date(_data["startDate"].toString()) : <any>undefined;
            this.endDate = _data["endDate"] ? new Date(_data["endDate"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): BaseDateRangeFilterRequest {
        data = typeof data === 'object' ? data : {};
        let result = new BaseDateRangeFilterRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["startDate"] = this.startDate ? this.startDate.toISOString() : <any>undefined;
        data["endDate"] = this.endDate ? this.endDate.toISOString() : <any>undefined;
        return data;
    }
}

export interface IBaseDateRangeFilterRequest {
    startDate?: Date | undefined;
    endDate?: Date | undefined;
}

export class BaseAmountRangeFilterRequest implements IBaseAmountRangeFilterRequest {
    amountFrom?: number | undefined;
    amountTo?: number | undefined;

    constructor(data?: IBaseAmountRangeFilterRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.amountFrom = _data["amountFrom"];
            this.amountTo = _data["amountTo"];
        }
    }

    static fromJS(data: any): BaseAmountRangeFilterRequest {
        data = typeof data === 'object' ? data : {};
        let result = new BaseAmountRangeFilterRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["amountFrom"] = this.amountFrom;
        data["amountTo"] = this.amountTo;
        return data;
    }
}

export interface IBaseAmountRangeFilterRequest {
    amountFrom?: number | undefined;
    amountTo?: number | undefined;
}

export class SiteSettingsResponse implements ISiteSettingsResponse {
    locale?: string | undefined;
    version?: CacheVersionResponse | undefined;

    constructor(data?: ISiteSettingsResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.locale = _data["locale"];
            this.version = _data["version"] ? CacheVersionResponse.fromJS(_data["version"]) : <any>undefined;
        }
    }

    static fromJS(data: any): SiteSettingsResponse {
        data = typeof data === 'object' ? data : {};
        let result = new SiteSettingsResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["locale"] = this.locale;
        data["version"] = this.version ? this.version.toJSON() : <any>undefined;
        return data;
    }
}

export interface ISiteSettingsResponse {
    locale?: string | undefined;
    version?: CacheVersionResponse | undefined;
}

export class CacheVersionResponse implements ICacheVersionResponse {
    localizationPublic?: string | undefined;
    localization?: string | undefined;
    country?: string | undefined;
    locale?: string | undefined;
    skill?: string | undefined;

    constructor(data?: ICacheVersionResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.localizationPublic = _data["localizationPublic"];
            this.localization = _data["localization"];
            this.country = _data["country"];
            this.locale = _data["locale"];
            this.skill = _data["skill"];
        }
    }

    static fromJS(data: any): CacheVersionResponse {
        data = typeof data === 'object' ? data : {};
        let result = new CacheVersionResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["localizationPublic"] = this.localizationPublic;
        data["localization"] = this.localization;
        data["country"] = this.country;
        data["locale"] = this.locale;
        data["skill"] = this.skill;
        return data;
    }
}

export interface ICacheVersionResponse {
    localizationPublic?: string | undefined;
    localization?: string | undefined;
    country?: string | undefined;
    locale?: string | undefined;
    skill?: string | undefined;
}

export class JwtTokenResponse implements IJwtTokenResponse {
    token?: string | undefined;

    constructor(data?: IJwtTokenResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.token = _data["token"];
        }
    }

    static fromJS(data: any): JwtTokenResponse {
        data = typeof data === 'object' ? data : {};
        let result = new JwtTokenResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["token"] = this.token;
        return data;
    }
}

export interface IJwtTokenResponse {
    token?: string | undefined;
}

export class BaseIdEntityOfGuid implements IBaseIdEntityOfGuid {
    id?: string;

    constructor(data?: IBaseIdEntityOfGuid) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): BaseIdEntityOfGuid {
        data = typeof data === 'object' ? data : {};
        let result = new BaseIdEntityOfGuid();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        return data;
    }
}

export interface IBaseIdEntityOfGuid {
    id?: string;
}

export class BaseDateTimeEntityOfGuid extends BaseIdEntityOfGuid implements IBaseDateTimeEntityOfGuid {
    createdAt?: Date;
    updatedAt?: Date | undefined;

    constructor(data?: IBaseDateTimeEntityOfGuid) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.createdAt = _data["createdAt"] ? new Date(_data["createdAt"].toString()) : <any>undefined;
            this.updatedAt = _data["updatedAt"] ? new Date(_data["updatedAt"].toString()) : <any>undefined;
        }
    }

    static override fromJS(data: any): BaseDateTimeEntityOfGuid {
        data = typeof data === 'object' ? data : {};
        let result = new BaseDateTimeEntityOfGuid();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["createdAt"] = this.createdAt ? this.createdAt.toISOString() : <any>undefined;
        data["updatedAt"] = this.updatedAt ? this.updatedAt.toISOString() : <any>undefined;
        super.toJSON(data);
        return data;
    }
}

export interface IBaseDateTimeEntityOfGuid extends IBaseIdEntityOfGuid {
    createdAt?: Date;
    updatedAt?: Date | undefined;
}

export class UserResponse extends BaseDateTimeEntityOfGuid implements IUserResponse {
    login?: string | undefined;
    loginNormalized?: string | undefined;
    email?: string | undefined;
    emailNormalized?: string | undefined;
    passwordHash?: string | undefined;
    salt?: string | undefined;
    status?: StatusEnum;
    isTemporaryPassword?: boolean;
    authType?: UserAuthMethodEnum;
    lastForgotPassword?: Date | undefined;
    lastForgotPasswordRequest?: Date | undefined;
    roles?: RoleResponse[];
    userSetting?: UserSettingResponse | undefined;
    version!: string;

    constructor(data?: IUserResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.login = _data["login"];
            this.loginNormalized = _data["loginNormalized"];
            this.email = _data["email"];
            this.emailNormalized = _data["emailNormalized"];
            this.passwordHash = _data["passwordHash"];
            this.salt = _data["salt"];
            this.status = _data["status"];
            this.isTemporaryPassword = _data["isTemporaryPassword"];
            this.authType = _data["authType"];
            this.lastForgotPassword = _data["lastForgotPassword"] ? new Date(_data["lastForgotPassword"].toString()) : <any>undefined;
            this.lastForgotPasswordRequest = _data["lastForgotPasswordRequest"] ? new Date(_data["lastForgotPasswordRequest"].toString()) : <any>undefined;
            if (Array.isArray(_data["roles"])) {
                this.roles = [] as any;
                for (let item of _data["roles"])
                    this.roles!.push(RoleResponse.fromJS(item));
            }
            this.userSetting = _data["userSetting"] ? UserSettingResponse.fromJS(_data["userSetting"]) : <any>undefined;
            this.version = _data["version"];
        }
    }

    static override fromJS(data: any): UserResponse {
        data = typeof data === 'object' ? data : {};
        let result = new UserResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["login"] = this.login;
        data["loginNormalized"] = this.loginNormalized;
        data["email"] = this.email;
        data["emailNormalized"] = this.emailNormalized;
        data["passwordHash"] = this.passwordHash;
        data["salt"] = this.salt;
        data["status"] = this.status;
        data["isTemporaryPassword"] = this.isTemporaryPassword;
        data["authType"] = this.authType;
        data["lastForgotPassword"] = this.lastForgotPassword ? this.lastForgotPassword.toISOString() : <any>undefined;
        data["lastForgotPasswordRequest"] = this.lastForgotPasswordRequest ? this.lastForgotPasswordRequest.toISOString() : <any>undefined;
        if (Array.isArray(this.roles)) {
            data["roles"] = [];
            for (let item of this.roles)
                data["roles"].push(item.toJSON());
        }
        data["userSetting"] = this.userSetting ? this.userSetting.toJSON() : <any>undefined;
        data["version"] = this.version;
        super.toJSON(data);
        return data;
    }
}

export interface IUserResponse extends IBaseDateTimeEntityOfGuid {
    login?: string | undefined;
    loginNormalized?: string | undefined;
    email?: string | undefined;
    emailNormalized?: string | undefined;
    passwordHash?: string | undefined;
    salt?: string | undefined;
    status?: StatusEnum;
    isTemporaryPassword?: boolean;
    authType?: UserAuthMethodEnum;
    lastForgotPassword?: Date | undefined;
    lastForgotPasswordRequest?: Date | undefined;
    roles?: RoleResponse[];
    userSetting?: UserSettingResponse | undefined;
    version: string;
}

export enum StatusEnum {
    New = 0,
    Active = 1,
    Inactive = 2,
    Blocked = 3,
    Deleted = 4,
    Pending = 5,
    Approved = 6,
    Rejected = 7,
    Completed = 8,
    Cancelled = 9,
    Archived = 10,
}

export enum UserAuthMethodEnum {
    Base = 1,
    Google = 2,
}

export class BaseIdEntityOfInteger implements IBaseIdEntityOfInteger {
    id?: number;

    constructor(data?: IBaseIdEntityOfInteger) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): BaseIdEntityOfInteger {
        data = typeof data === 'object' ? data : {};
        let result = new BaseIdEntityOfInteger();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        return data;
    }
}

export interface IBaseIdEntityOfInteger {
    id?: number;
}

export class RoleResponse extends BaseIdEntityOfInteger implements IRoleResponse {
    title?: string | undefined;
    userRole?: UserRoleEnum;

    constructor(data?: IRoleResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.title = _data["title"];
            this.userRole = _data["userRole"];
        }
    }

    static override fromJS(data: any): RoleResponse {
        data = typeof data === 'object' ? data : {};
        let result = new RoleResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["title"] = this.title;
        data["userRole"] = this.userRole;
        super.toJSON(data);
        return data;
    }
}

export interface IRoleResponse extends IBaseIdEntityOfInteger {
    title?: string | undefined;
    userRole?: UserRoleEnum;
}

export enum UserRoleEnum {
    User = 1,
    TechnicalSupport = 2,
    Admin = 3,
    SuperAdmin = 4,
}

export class UserSettingResponse extends BaseIdEntityOfGuid implements IUserSettingResponse {
    defaultLocale?: string | undefined;
    timeZone?: number;
    countryId?: number | undefined;
    userId?: string;
    version!: string;

    constructor(data?: IUserSettingResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.defaultLocale = _data["defaultLocale"];
            this.timeZone = _data["timeZone"];
            this.countryId = _data["countryId"];
            this.userId = _data["userId"];
            this.version = _data["version"];
        }
    }

    static override fromJS(data: any): UserSettingResponse {
        data = typeof data === 'object' ? data : {};
        let result = new UserSettingResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["defaultLocale"] = this.defaultLocale;
        data["timeZone"] = this.timeZone;
        data["countryId"] = this.countryId;
        data["userId"] = this.userId;
        data["version"] = this.version;
        super.toJSON(data);
        return data;
    }
}

export interface IUserSettingResponse extends IBaseIdEntityOfGuid {
    defaultLocale?: string | undefined;
    timeZone?: number;
    countryId?: number | undefined;
    userId?: string;
    version: string;
}

export class LocalizationsResponse extends BaseVersionEntity implements ILocalizationsResponse {
    data?: LocalizationResponse[];

    constructor(data?: ILocalizationsResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LocalizationResponse.fromJS(item));
            }
        }
    }

    static override fromJS(data: any): LocalizationsResponse {
        data = typeof data === 'object' ? data : {};
        let result = new LocalizationsResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
}

export interface ILocalizationsResponse extends IBaseVersionEntity {
    data?: LocalizationResponse[];
}

export class LocalizationResponse implements ILocalizationResponse {
    locale?: string | undefined;
    items?: LocalizationItemResponse[];

    constructor(data?: ILocalizationResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.locale = _data["locale"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(LocalizationItemResponse.fromJS(item));
            }
        }
    }

    static fromJS(data: any): LocalizationResponse {
        data = typeof data === 'object' ? data : {};
        let result = new LocalizationResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["locale"] = this.locale;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        return data;
    }
}

export interface ILocalizationResponse {
    locale?: string | undefined;
    items?: LocalizationItemResponse[];
}

export class LocalizationItemResponse implements ILocalizationItemResponse {
    key?: string | undefined;
    value?: string | undefined;

    constructor(data?: ILocalizationItemResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.key = _data["key"];
            this.value = _data["value"];
        }
    }

    static fromJS(data: any): LocalizationItemResponse {
        data = typeof data === 'object' ? data : {};
        let result = new LocalizationItemResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["key"] = this.key;
        data["value"] = this.value;
        return data;
    }
}

export interface ILocalizationItemResponse {
    key?: string | undefined;
    value?: string | undefined;
}

export class VersionedListResponseOfLocaleResponse extends BaseVersionEntity implements IVersionedListResponseOfLocaleResponse {
    items?: LocaleResponse[];

    constructor(data?: IVersionedListResponseOfLocaleResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(LocaleResponse.fromJS(item));
            }
        }
    }

    static override fromJS(data: any): VersionedListResponseOfLocaleResponse {
        data = typeof data === 'object' ? data : {};
        let result = new VersionedListResponseOfLocaleResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
}

export interface IVersionedListResponseOfLocaleResponse extends IBaseVersionEntity {
    items?: LocaleResponse[];
}

export class LocaleResponse extends BaseIdEntityOfInteger implements ILocaleResponse {
    isoCode?: string | undefined;
    title?: string | undefined;
    titleEn?: string | undefined;
    titleNormalized?: string | undefined;
    titleEnNormalized?: string | undefined;
    isDefault?: boolean;
    status?: StatusEnum;
    localeEnum?: LocaleEnum;
    culture?: string | undefined;

    constructor(data?: ILocaleResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.isoCode = _data["isoCode"];
            this.title = _data["title"];
            this.titleEn = _data["titleEn"];
            this.titleNormalized = _data["titleNormalized"];
            this.titleEnNormalized = _data["titleEnNormalized"];
            this.isDefault = _data["isDefault"];
            this.status = _data["status"];
            this.localeEnum = _data["localeEnum"];
            this.culture = _data["culture"];
        }
    }

    static override fromJS(data: any): LocaleResponse {
        data = typeof data === 'object' ? data : {};
        let result = new LocaleResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isoCode"] = this.isoCode;
        data["title"] = this.title;
        data["titleEn"] = this.titleEn;
        data["titleNormalized"] = this.titleNormalized;
        data["titleEnNormalized"] = this.titleEnNormalized;
        data["isDefault"] = this.isDefault;
        data["status"] = this.status;
        data["localeEnum"] = this.localeEnum;
        data["culture"] = this.culture;
        super.toJSON(data);
        return data;
    }
}

export interface ILocaleResponse extends IBaseIdEntityOfInteger {
    isoCode?: string | undefined;
    title?: string | undefined;
    titleEn?: string | undefined;
    titleNormalized?: string | undefined;
    titleEnNormalized?: string | undefined;
    isDefault?: boolean;
    status?: StatusEnum;
    localeEnum?: LocaleEnum;
    culture?: string | undefined;
}

export enum LocaleEnum {
    English = 1,
    Spanish = 2,
    French = 3,
    Ukrainian = 4,
    Russian = 5,
    German = 6,
    Italian = 7,
}

export class VersionedListResponseOfCountryResponse extends BaseVersionEntity implements IVersionedListResponseOfCountryResponse {
    items?: CountryResponse[];

    constructor(data?: IVersionedListResponseOfCountryResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(CountryResponse.fromJS(item));
            }
        }
    }

    static override fromJS(data: any): VersionedListResponseOfCountryResponse {
        data = typeof data === 'object' ? data : {};
        let result = new VersionedListResponseOfCountryResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
}

export interface IVersionedListResponseOfCountryResponse extends IBaseVersionEntity {
    items?: CountryResponse[];
}

export class CountryResponse extends BaseIdEntityOfInteger implements ICountryResponse {
    title?: string | undefined;
    code?: string | undefined;
    titleEn?: string | undefined;
    status?: StatusEnum;

    constructor(data?: ICountryResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.title = _data["title"];
            this.code = _data["code"];
            this.titleEn = _data["titleEn"];
            this.status = _data["status"];
        }
    }

    static override fromJS(data: any): CountryResponse {
        data = typeof data === 'object' ? data : {};
        let result = new CountryResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["title"] = this.title;
        data["code"] = this.code;
        data["titleEn"] = this.titleEn;
        data["status"] = this.status;
        super.toJSON(data);
        return data;
    }
}

export interface ICountryResponse extends IBaseIdEntityOfInteger {
    title?: string | undefined;
    code?: string | undefined;
    titleEn?: string | undefined;
    status?: StatusEnum;
}

export class VersionedListResponseOfSkillResponse extends BaseVersionEntity implements IVersionedListResponseOfSkillResponse {
    items?: SkillResponse[];

    constructor(data?: IVersionedListResponseOfSkillResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SkillResponse.fromJS(item));
            }
        }
    }

    static override fromJS(data: any): VersionedListResponseOfSkillResponse {
        data = typeof data === 'object' ? data : {};
        let result = new VersionedListResponseOfSkillResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        super.toJSON(data);
        return data;
    }
}

export interface IVersionedListResponseOfSkillResponse extends IBaseVersionEntity {
    items?: SkillResponse[];
}

export class SkillResponse extends BaseIdEntityOfGuid implements ISkillResponse {
    title?: string | undefined;
    status?: StatusEnum;

    constructor(data?: ISkillResponse) {
        super(data);
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.title = _data["title"];
            this.status = _data["status"];
        }
    }

    static override fromJS(data: any): SkillResponse {
        data = typeof data === 'object' ? data : {};
        let result = new SkillResponse();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["title"] = this.title;
        data["status"] = this.status;
        super.toJSON(data);
        return data;
    }
}

export interface ISkillResponse extends IBaseIdEntityOfGuid {
    title?: string | undefined;
    status?: StatusEnum;
}

export class BaseBoolResponse implements IBaseBoolResponse {
    success?: boolean;

    constructor(data?: IBaseBoolResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.success = _data["success"];
        }
    }

    static fromJS(data: any): BaseBoolResponse {
        data = typeof data === 'object' ? data : {};
        let result = new BaseBoolResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["success"] = this.success;
        return data;
    }
}

export interface IBaseBoolResponse {
    success?: boolean;
}

export class BaseEntityIdResponseOfGuid implements IBaseEntityIdResponseOfGuid {
    id?: string;

    constructor(data?: IBaseEntityIdResponseOfGuid) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): BaseEntityIdResponseOfGuid {
        data = typeof data === 'object' ? data : {};
        let result = new BaseEntityIdResponseOfGuid();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        return data;
    }
}

export interface IBaseEntityIdResponseOfGuid {
    id?: string;
}

export class BaseEntityIdResponseOfInteger implements IBaseEntityIdResponseOfInteger {
    id?: number;

    constructor(data?: IBaseEntityIdResponseOfInteger) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): BaseEntityIdResponseOfInteger {
        data = typeof data === 'object' ? data : {};
        let result = new BaseEntityIdResponseOfInteger();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        return data;
    }
}

export interface IBaseEntityIdResponseOfInteger {
    id?: number;
}

